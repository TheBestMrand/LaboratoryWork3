@using Microsoft.AspNetCore.Components
@using LaboratoryWork3.Models.Data
@using System.ComponentModel.DataAnnotations
@using LaboratoryWork3.Models.Services
@using LaboratoryWork3.ViewModels
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject LoginViewModel LoginVm

<Modal @ref="_loginModal">
    <div class="custom-modal-wrapper">
        <ModalHeader Class="custom-modal-header">
            <h3>Login</h3>
        </ModalHeader>
        <ModalBody Class="custom-modal-body">
            <EditForm Model="@_user" OnValidSubmit="@LoginUser">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input id="email" class="form-control" @bind="@_user.Email"/>
                    <ValidationMessage For="@(() => _user.Email)"/>
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input id="password" type="password" class="form-control" @bind="@_user.Password"/>
                    <ValidationMessage For="@(() => _user.Password)"/>
                </div>
                @if(!string.IsNullOrEmpty(_errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @_errorMessage
                    </div>
                }
                <button type="submit" class="btn btn-primary">Login</button>
            </EditForm>
        </ModalBody>
    </div>
</Modal>

@code {
    private User _user = new User();
    private Modal _loginModal;

    private string _errorMessage;

    private async Task LoginUser()
    {
        var loginResult = await LoginVm.Login(_user);
        if (loginResult)
        {
            await _loginModal.Hide();
        }
        else
        {
            _errorMessage = "Invalid login or password!";
        }
    }

    public void Show() => _loginModal.Show();
}