@using LaboratoryWork3.Shared
@using LaboratoryWork3.Models.Services
@using LaboratoryWork3.ViewModels
@inject NavMenuViewModel NavMenuVm

<div class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <div class="container">
        <a class="navbar-brand" href="/">Laboratory 3</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/">
                        <span class="oi oi-home" aria-hidden="true"></span> Main
                    </NavLink>
                </li>
                @if (_isAuthenticated)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/services">
                            Services
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/residents">
                            Residents
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/task1">
                            Task1
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/task2">
                            Task2
                        </NavLink>
                    </li>
                }
            </ul>
            <ul class="navbar-nav">
                @if (!_isAuthenticated)
                {
                    <li class="nav-item">
                        <button class="nav-link btn btn-link" @onclick="@ShowLoginModal">Login</button>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link btn btn-link" @onclick="@ShowSignUpModal">Sign Up</button>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <button class="nav-link btn btn-link" @onclick="@Logout">Logout</button>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

<ModalLogin @ref="_loginModal" />
<ModalSignUp @ref="_signUpModal" />

@code {
    private ModalLogin _loginModal;
    private ModalSignUp _signUpModal;

    private bool _isAuthenticated;

    private void ShowLoginModal()
    {
        _loginModal.Show();
    }

    private void ShowSignUpModal()
    {
        _signUpModal.Show();
    }

    private async Task Logout()
    {
        await NavMenuVm.Logout();
        _isAuthenticated = false;
    }

    protected override async Task OnInitializedAsync()
    {
        _isAuthenticated = await NavMenuVm.IsAuthenticatedAsync();
        NavMenuVm.AuthenticationStateChanged += UpdateAuthenticationState;
        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        NavMenuVm.AuthenticationStateChanged -= UpdateAuthenticationState;
    }

    private async void UpdateAuthenticationState(object sender, EventArgs e)
    {
        _isAuthenticated = await NavMenuVm.IsAuthenticatedAsync();
        StateHasChanged();
    }
}
